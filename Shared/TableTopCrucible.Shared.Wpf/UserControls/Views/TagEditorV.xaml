<rxui:ReactiveUserControl x:TypeArguments="vm:TagEditorVm"
                          x:Class="TableTopCrucible.Shared.Wpf.UserControls.Views.TagEditorV"
                          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                          xmlns:v="clr-namespace:TableTopCrucible.Shared.Wpf.UserControls.Views"
                          xmlns:rxui="http://reactiveui.net"
                          xmlns:vm="clr-namespace:TableTopCrucible.Shared.Wpf.UserControls.ViewModels"
                          xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                          xmlns:c="clr-namespace:TableTopCrucible.Core.Wpf.Helper.Converter;assembly=TableTopCrucible.Core.Wpf.Helper"
                          xmlns:system="clr-namespace:System;assembly=System.Runtime"
                          xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                          mc:Ignorable="d" 
                          d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="Button"
               x:Key="ChipButton"
               BasedOn="{StaticResource MaterialDesignIconForegroundButton}">
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>

                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="md:PackIcon">
                    <Setter Property="Margin"
                            Value="2"/>
                </Style>
            </Style.Resources>
        </Style>
    </UserControl.Resources>
    <ItemsControl x:Name="TagList">
        <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <WrapPanel />
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemTemplate>
            <DataTemplate>
                <!--###################################################################################################################-->
                <!--#####################[]                                                                     []#####################-->
                <!--#####################[]   be careful when changing the template, it is referenced in code   []#####################-->
                <!--#####################[]                                                                     []#####################-->
                <!--###################################################################################################################-->
                <md:Chip MouseDoubleClick="Chip_OnMouseDoubleClick"
                         Margin="0 0 8 8">
                    <StackPanel Orientation="Horizontal"
                                d:DataContext="{d:DesignInstance vm:TagController}">
                        <!--add content-->
                        <Button Visibility="{Binding 
                                                    Path=AddMode,
                                                    Converter={StaticResource BooleanToVisibilityConverter}}"
                                Content="{md:PackIcon Plus}"
                                Margin="-8 0"
                                Style="{StaticResource ChipButton}"
                                Click="NewTag_OnClick"/>
                        <!--read/edit content-->
                        <StackPanel Orientation="Horizontal" 
                                    Loaded="FrameworkElement_OnLoaded"
                                    Visibility="{Binding 
                                                    Path=AddMode,
                                                    Converter={x:Static c:BoolVisibilityConverter.Instance},
                                                    ConverterParameter='i'}">
                            <!--read only text-->
                            <TextBlock Text="{Binding Path=EditTag, UpdateSourceTrigger=PropertyChanged}"
                                       Visibility="{Binding Path=EditModeEnabled,
                                                      Converter={x:Static c:BoolVisibilityConverter.Instance},
                                                      ConverterParameter=i}"
                                       VerticalAlignment="Center"/>
                            <!--write only text-->
                            <ComboBox x:Name="cb_tag"  IsEditable="True"
                                      ItemsSource="{Binding Path=AvailableTags,
                                                      Mode=OneWay}"
                                      Visibility="{Binding Path=EditModeEnabled,
                                                      Converter={StaticResource BooleanToVisibilityConverter}}"
                                      Text="{Binding Path=EditTag, UpdateSourceTrigger=PropertyChanged}"
                                      KeyDown="TextBox_OnKeyDown"
                                      Padding="4"
                                      VerticalAlignment="Center"
                                      VerticalContentAlignment="Center"
                                      MinWidth="{Binding Path=EditModeEnabled,
                                                        Converter={x:Static v:EditModeToTextBoxWidthConverter.Instance}}"
                                      Margin="0">
                            </ComboBox>
                            <!--confirm-->
                            <Button Style="{StaticResource ChipButton}"
                                    Visibility="{Binding Path=EditModeEnabled,
                                                      Converter={StaticResource BooleanToVisibilityConverter}}"
                                    IsEnabled="{Binding Path=HasErrors,
                                                        Converter={StaticResource InvertBooleanConverter}}"
                                    Click="SaveChanges_OnClick"
                                    Content="{md:PackIcon Check}"
                                    Margin="2 0"/>
                            <!--delete/revert-->
                            <Button Style="{StaticResource ChipButton}"
                                    Visibility="{Binding Path=ViewModel.TagDeletionEnabled,
                                                      Converter={StaticResource BooleanToVisibilityConverter}, 
                                                      Mode=OneWay,
                                                      RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=v:TagEditorV}}"
                                    Command="{Binding Path=ViewModel.RemoveTagCommand,
                                                      Mode=OneWay,
                                                      RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=v:TagEditorV}}"
                                    CommandParameter="{Binding Mode=OneWay}"
                                    Margin="0 0 -8 0">
                                <md:PackIcon Kind="{Binding Path=EditModeEnabled,
                                                            Converter={x:Static v:EditModeToCloseIconConverter.Instance}}"/>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </md:Chip>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
    </ItemsControl>
</rxui:ReactiveUserControl>
